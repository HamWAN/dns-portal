# Generated by Django 5.1.7 on 2025-03-23 21:35

import django.core.validators
import django.db.models.deletion
import portal.fields
import portal.network
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Site',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=250)),
                ('latitude', models.FloatField(blank=True, help_text='Decimal (e.g., 00.0000)', null=True)),
                ('longitude', models.FloatField(blank=True, help_text='Decimal (e.g., 000.0000)', null=True)),
                ('status', models.CharField(blank=True, max_length=30)),
                ('comment', models.TextField(blank=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Host',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=242, unique=True, validators=[django.core.validators.RegexValidator(message='Enter a valid hostname.', regex='^(?=^.{1,253}$)(^((?!-)[a-zA-Z0-9-]{1,63}(?<!-)\\.)*[a-zA-Z0-9-]{1,63}$)$')])),
                ('type', models.CharField(choices=[('sector', 'Sector'), ('ptp', 'PtP'), ('edgerouter', 'Edge Router'), ('cellrouter', 'Cell Router'), ('client', 'Client'), ('server', 'Server'), ('vm', 'Virtual Machine'), ('container', 'Container'), ('anycast', 'Anycast service'), ('pdu', 'PDU'), ('kvm', 'KVM/iLO/DRAC'), ('other', 'Other')], max_length=24)),
                ('os', models.CharField(choices=[('routeros', 'RouterOS'), ('airos', 'AirOS'), ('linux', 'Linux'), ('esxi', 'ESXi'), ('windows', 'Windows'), ('ilo', 'iLO'), ('other', 'Other'), (None, 'None')], max_length=32, null=True)),
                ('eth_mac', portal.fields.MACAddressField(blank=True, max_length=17, null=True, verbose_name='Ethernet MAC')),
                ('wlan_mac', portal.fields.MACAddressField(blank=True, max_length=17, null=True, verbose_name='Wireless MAC')),
                ('latitude', models.FloatField(blank=True, help_text='Decimal (e.g., 00.0000)', null=True)),
                ('longitude', models.FloatField(blank=True, help_text='Decimal (e.g., 000.0000)', null=True)),
                ('notes', models.TextField(blank=True)),
                ('admins', models.ManyToManyField(blank=True, help_text='Selected admins will be allowed to edit this host record.', related_name='authorized_hosts', to=settings.AUTH_USER_MODEL)),
                ('owner', models.ForeignKey(blank=True, help_text='Warning: changing this field could affect your ability to administer this host record.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='hosts_owned', to=settings.AUTH_USER_MODEL)),
                ('site', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='portal.site')),
            ],
        ),
        migrations.CreateModel(
            name='IPAddress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('interface', models.CharField(blank=True, help_text='Leave blank for no interface subdomain.', max_length=242, null=True, validators=[django.core.validators.RegexValidator(message='Enter a valid hostname.', regex='^(?=^.{1,253}$)(^((?!-)[a-zA-Z0-9-]{1,63}(?<!-)\\.)*[a-zA-Z0-9-]{1,63}$)$')])),
                ('ip', portal.network.IPAddressField(unique=True, verbose_name='IP Address')),
                ('auto_dns', models.BooleanField(blank=True, default=True, help_text='Upon saving, automatically create an A record and a PTR record for this address.', null=True, verbose_name='Auto manage DNS')),
                ('primary', models.BooleanField(blank=True, default=False, help_text='Create a CNAME from the host to this interface.')),
                ('host', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ipaddresses', to='portal.host')),
            ],
            options={
                'verbose_name': 'IP Address',
                'verbose_name_plural': 'IP Addresses',
                'ordering': ['ip'],
            },
        ),
        migrations.CreateModel(
            name='Subnet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('network', portal.network.IPNetworkField(unique=True)),
                ('notes', models.TextField(blank=True)),
                ('owner', models.ForeignKey(blank=True, help_text='Warning: changing this field could affect your ability to administer this subnet record.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='subnets_owned', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['network'],
            },
        ),
    ]
